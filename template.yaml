AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless patterns - Amazon API Gateway to AWS Lambda to Amazon DynamoDB

# Parameters to be provided
Globals:
  Function:
    Runtime: python3.10
    CodeUri: src/
    Environment:
      Variables:
        TABLE_NAME: !Ref TableName


Resources:
  WeatherApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

  CreateWeather:
    Type: AWS::Serverless::Function
    Description: 'Lambda function inserts data into DynamoDB table'
    Properties:
      FunctionName: CreateWeatherItem
      Handler: create_weather.lambda_handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /create-weather
            Method: POST

  GetWeatherFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function to retrieve weather item from DynamoDB table'
    Properties:
      FunctionName: GetWeatherItems
      Handler: get_weathers.lambda_handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: GET
  

  GetSingleWeatherFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function to retrieve weather item from DynamoDB table'
    Properties:
      FunctionName: GetWeatherItem
      Handler: get_single_weather.lambda_handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /weather/{id}
            Method: GET
            
  DeleteWeatherFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function remove weather item from DynamoDB table'
    Properties:
      FunctionName: DeleteWeatherItem
      Handler: delete_weather.lambda_handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /delete-weather/{id}
            Method: DELETE  

  UpdateLambdaFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function updates weather item in DynamoDB table'
    Properties:
      FunctionName: UpdateWeatherItem
      Handler: update_weather.lambda_handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ApiEvent:
          Type: Api
          Properties: 
            Path: /update-weather/{id}
            Method: PUT 
  


  DynamoDBTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: WeatherDataTable

Outputs:
  EndpointUrl:
    Description: 'Weather REST API endpoint URL'
    Value: !Sub 'https://${WeatherApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'